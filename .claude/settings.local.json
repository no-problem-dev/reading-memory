{
  "permissions": {
    "allow": [
      "Bash(ls:*)",
      "mcp__notion__fetch",
      "Bash(mkdir:*)",
      "Bash(tree:*)",
      "mcp__serena__activate_project",
      "mcp__serena__find_file",
      "mcp__serena__think_about_collected_information",
      "Bash(rm:*)",
      "Bash(git init:*)",
      "Bash(git branch:*)",
      "Bash(mv:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(gh repo create:*)",
      "Bash(git remote add:*)",
      "Bash(git push:*)",
      "Bash(git submodule add:*)",
      "Bash(gh repo delete:*)",
      "Bash(find:*)",
      "Bash(git pull:*)",
      "Bash(xcodebuild:*)",
      "Bash(xcrun simctl list:*)",
      "mcp__serena__write_memory",
      "mcp__serena__read_memory",
      "mcp__serena__check_onboarding_performed",
      "mcp__serena__list_dir",
      "mcp__serena__find_symbol",
      "Bash(make:*)",
      "mcp__serena__search_for_pattern",
      "mcp__serena__get_symbols_overview",
      "mcp__serena__replace_symbol_body",
      "mcp__serena__insert_after_symbol",
      "Bash(cat:*)",
      "Bash(npx tsc:*)",
      "Bash(firebase functions:secrets:set:*)",
      "Bash(git checkout:*)",
      "Bash(npx ts-node:*)",
      "Bash(npm run deploy:*)",
      "Bash(touch:*)",
      "mcp__serena__think_about_task_adherence",
      "mcp__serena__list_memories",
      "mcp__serena__find_referencing_symbols",
      "mcp__serena__think_about_whether_you_are_done",
      "Bash(npm run build:*)",
      "Bash(npm run lint)",
      "Bash(npm run lint:*)",
      "Bash(firebase deploy:*)",
      "Bash(firebase functions:log:*)",
      "Bash(gcloud functions logs read:*)",
      "Bash(gcloud config set:*)",
      "Bash(gcloud auth application-default set-quota-project:*)",
      "Bash(gcloud logging read:*)",
      "Bash(npm install:*)",
      "Bash(cp:*)",
      "Bash(chmod:*)",
      "Bash(docker build:*)",
      "Bash(gcloud config get-value:*)",
      "Bash(gcloud projects list:*)",
      "Bash(gcloud services list:*)",
      "Bash(gcloud secrets list:*)",
      "Bash(gcloud iam service-accounts:*)",
      "Bash(--display-name=\"Reading Memory API Service Account\" )",
      "Bash(--description=\"Service account for Reading Memory API on Cloud Run\")",
      "Bash(gcloud projects add-iam-policy-binding:*)",
      "Bash(--member=\"serviceAccount:reading-memory-api@reading-memory.iam.gserviceaccount.com\" )",
      "Bash(--role=\"roles/datastore.user\")",
      "Bash(--member=\"serviceAccount:reading-memory-api@reading-memory.iam.gserviceaccount.com\" )",
      "Bash(--role=\"roles/firebase.sdkAdminServiceAgent\")",
      "Bash(--member=\"serviceAccount:reading-memory-api@reading-memory.iam.gserviceaccount.com\" )",
      "Bash(--role=\"roles/storage.admin\")",
      "Bash(--member=\"serviceAccount:reading-memory-api@reading-memory.iam.gserviceaccount.com\" )",
      "Bash(--role=\"roles/secretmanager.secretAccessor\")",
      "Bash(gcloud builds submit:*)",
      "Bash(gcloud artifacts repositories create:*)",
      "Bash(--repository-format=docker )",
      "Bash(--location=asia-northeast1 )",
      "Bash(--description=\"Reading Memory API Docker images\")",
      "Bash(gcloud auth configure-docker:*)",
      "Bash(gcloud run deploy:*)",
      "Bash(--image asia-northeast1-docker.pkg.dev/reading-memory/reading-memory-api/reading-memory-api:latest )",
      "Bash(--platform managed )",
      "Bash(--region asia-northeast1 )",
      "Bash(--allow-unauthenticated )",
      "Bash(--set-env-vars NODE_ENV=production,GCP_PROJECT_ID=reading-memory )",
      "Bash(--set-secrets \"GOOGLE_BOOKS_API_KEY=GOOGLE_BOOKS_API_KEY:latest,CLAUDE_API_KEY=CLAUDE_API_KEY:latest\" )",
      "Bash(--service-account reading-memory-api@reading-memory.iam.gserviceaccount.com )",
      "Bash(--memory 1Gi )",
      "Bash(--cpu 1 )",
      "Bash(--timeout 60 )",
      "Bash(--max-instances 100)",
      "Bash(gcloud run services describe:*)",
      "Bash(gcloud run services list:*)",
      "Bash(curl:*)",
      "Bash(gcloud run logs read:*)",
      "Bash(gcloud run services logs read:*)",
      "Bash(firebase functions:list:*)",
      "Bash(firebase functions:delete:*)",
      "Bash(gcloud container images list:*)",
      "Bash(gcloud artifacts repositories list:*)",
      "Bash(gcloud artifacts docker images list:*)",
      "Bash(firebase projects:get:*)",
      "Bash(gcloud storage buckets list:*)",
      "Bash(--image asia-northeast1-docker.pkg.dev/reading-memory/reading-memory-api/reading-memory-api:latest )",
      "Bash(--region asia-northeast1)",
      "Bash(gcloud projects get-iam-policy:*)",
      "Bash(--member=\"serviceAccount:reading-memory-api@reading-memory.iam.gserviceaccount.com\" )",
      "Bash(--role=\"roles/firebase.admin\")",
      "Bash(--image asia-northeast1-docker.pkg.dev/reading-memory/reading-memory-api/reading-memory-api:latest )",
      "Bash(--member=\"serviceAccount:reading-memory-api@reading-memory.iam.gserviceaccount.com\" )",
      "Bash(--role=\"roles/serviceusage.serviceUsageConsumer\")",
      "Bash(gcloud run services update:*)",
      "Bash(grep:*)",
      "Bash(gcloud builds list:*)",
      "Bash(gcloud run revisions describe:*)",
      "Bash(gcloud run revisions:*)",
      "Bash(npx eslint:*)"
    ],
    "deny": []
  }
}